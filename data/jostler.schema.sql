BEGIN;
DROP TABLE IF EXISTS users CASCADE;
CREATE TABLE users (
	id SERIAL PRIMARY KEY,
	login VARCHAR(32) UNIQUE NOT NULL,
	name VARCHAR(64) NOT NULL,
	email VARCHAR(96) NOT NULL,
	pass VARCHAR(128) UNIQUE NOT NULL
);

DROP TABLE IF EXISTS tick CASCADE;
CREATE TABLE tick (
	id SERIAL PRIMARY KEY,
	user_id INTEGER NOT NULL REFERENCES users (id),
	title VARCHAR(64) NOT NULL,
	rest MONEY NOT NULL,
	created TIMESTAMP,
	modified TIMESTAMP
);

DROP TABLE IF EXISTS deal_type CASCADE;
CREATE TABLE deal_type (
	id SERIAL PRIMARY KEY,
	title VARCHAR(32) UNIQUE NOT NULL
);

DROP TABLE IF EXISTS cat CASCADE;
CREATE TABLE cat (
	id SERIAL PRIMARY KEY,
	title VARCHAR(64) NOT NULL,
	parent_id INTEGER REFERENCES cat(id),
	deal_type_id INTEGER NOT NULL  REFERENCES deal_type(id) -- transaction type: income, outcome, transfer
);

DROP TABLE IF EXISTS cy CASCADE;
CREATE TABLE cy (
	id SERIAL PRIMARY KEY,
	abbr VARCHAR(3) UNIQUE NOT NULL,
	logo VARCHAR(64) UNIQUE NOT NULL
);

DROP TABLE IF EXISTS deal CASCADE;
CREATE TABLE deal (
	id SERIAL PRIMARY KEY,
	tick_id INTEGER NOT NULL REFERENCES tick (id),
	date_time TIMESTAMP NOT NULL,				-- transaction date/time.
	cat_id INTEGER NOT NULL REFERENCES cat (id),
	amount MONEY NOT NULL,
	cy_id INTEGER NOT NULL REFERENCES cy (id), 	-- currency.
	comment VARCHAR(128) NOT NULL,
	aux VARCHAR(16)								-- auxiliary field for different purpose

);

DROP TABLE IF EXISTS tag CASCADE;
CREATE TABLE tag(
	id SERIAL PRIMARY KEY,
	title VARCHAR(48) UNIQUE NOT NULL
);

DROP TABLE IF EXISTS deal_tag_junction CASCADE;
CREATE TABLE deal_tag_junction (
	deal_id INTEGER REFERENCES deal(id),
	tag_id INTEGER REFERENCES tag(id),
	PRIMARY KEY (deal_id, tag_id)
);

COMMIT;